apply plugin: "com.android.application"
apply plugin: "com.facebook.react"
// apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")


project.ext.vectoricons = [
    iconFontNames: [ 'MaterialCommunityIcons.ttf', 'Ionicons.ttf', 'Entypo.ttf', 'AntDesign.ttf' ] // Name of the font files you want to copy
]



react {
   
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */

def enableSeparateBuildPerCPUArchitecture = true
def enableProguardInReleaseBuilds = true

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
 
    ndkVersion rootProject.ext.ndkVersion
    // buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    namespace "com.frenecapp"
    defaultConfig {
        applicationId "com.frenecapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    // signingConfigs {
    //     release {
    //     storeFile file('D:\\Desarrollo\\Movil\\frenec-app\\android\\app\\my-upload-key.keystore')
    //     storePassword 'temporal'
    //     keyAlias 'my-key-alias'
    //     keyPassword 'temporal'
    //     }
    //     debug {
    //         storeFile file('debug.keystore')
    //         storePassword 'android'
    //         keyAlias 'androiddebugkey'
    //         keyPassword 'android'
    //     }
    // }
    buildTypes {
        debug {
            // signingConfig signingConfigs.debug
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            // signingConfig signingConfigs.release
            archivesBaseName = "frenec"

        }
    }
}

dependencies {

    implementation("com.facebook.react:react-android")
    implementation project(':react-native-splash-screen') // here
    implementation project(':react-native-vector-icons')


    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.squareup.okhttp3', module:'okhttp'
    }

    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}")
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); 
applyNativeModulesAppBuildGradle(project)

